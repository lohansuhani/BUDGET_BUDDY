<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Smart Budget Tracker</title>
<<<<<<< HEAD
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        /* Existing styles... */
        body, html {
            margin: 0;
            padding: 0;
            font-family: 'Roboto', sans-serif;
            background-color: #f9f9f9;
            transition: background-color 0.3s, color 0.3s;
        }
        
        .logo img {
           
            height: 90px;
            transition: transform 0.3s;


        }
        .logo img:hover {
            transform: scale(1.1);
        }
        .nav-links {
            list-style: none;
            display: flex;
            gap: 70px;
        }
        .nav-links li a {
            color: white;
            text-decoration: none;
            font-size: 1.2rem;
            transition: color 0.3s;
        }
        .nav-links li a:hover {
            color: #f39c12;
        }
        .theme-toggle {
            background-color: #f39c12;
            color: white;
            border: none;
            padding: 10px 20px;
            cursor: pointer;
            border-radius: 20px;
            transition: background-color 0.3s;

        }
        .theme-toggle:hover {
            background-color: #e67e22;
            transform: scale(1.05);
        }
        /* New navigation bar styles */
        .new-navbar {
            background-color: #333;
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1rem 5%;
    }

        
        .new-navbar img {
            height: 50px;
            margin-right: 15px;
        }
        .new-navbar .text {
            font-size: 45px;
            margin-right: auto;
        }
        .new-nav-links {
            list-style: none;
            display: flex;
            gap: 70px;

        }
        .new-nav-links li a {
            color: white;
            text-decoration: none;
            font-size: 1.2rem;
            transition: color 0.3s;

        }
        .new-nav-links li a:hover {
            color: #f39c12;

        }
        section {
=======
    <!-- <link rel="stylesheet" href="/public/style.css"> -->
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        
    body, html {
      margin: 0;
      padding: 0;
      font-family: 'Roboto', sans-serif;
      background-color: #f9f9f9;
    }
    .navbar {
      background-color: #333;
      color: white;
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 1rem 5%;
    }
    .logo img {
      height: 60px;
      transition: transform 0.3s;
    }
    .logo img:hover {
      transform: scale(1.1);
    }
    .nav-links {
      list-style: none;
      display: flex;
      gap: 70px;
    }
    .nav-links li a {
      color: white;
      text-decoration: none;
      font-size: 1.2rem;
      transition: color 0.3s;
    }
    .nav-links li a:hover {
      color: #f39c12;
    }
    .theme-toggle {
      background-color: #f39c12;
      color: white;
      border: none;
      padding: 10px 20px;
      cursor: pointer;
      border-radius: 20px;
      transition: background-color 0.3s;
    }
    .theme-toggle:hover {
      background-color: #e67e22;
    }
    section {
>>>>>>> 26a43a58d06a9c7738dbe300d004f6512f12fa14
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 40px;
    }
    .heading {
      font-size: 4rem;
      font-weight: bold;
      background: linear-gradient(to right, #f39c12, #e74c3c);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    }
    .subtag {
      font-size: 2rem;
      color: grey;
    }
    .large-image {
      width: 40%;
      border-radius: 15px;
      box-shadow: 10px 10px 20px rgba(0,0,0,0.1);
      transition: transform 0.3s ease;
    }
    .large-image:hover {
      transform: scale(1.05);
    }
<<<<<<< HEAD
    

        /* Other existing styles... */
=======
    .container {
      padding: 40px;
    }
    .add-expense-table {
      display: none;
      position: fixed;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: white;
      padding: 20px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      border-radius: 10px;
      width: 350px;
      z-index: 10;
    }
    .add-expense-table input, select, button {
      width: 100%;
      margin-bottom: 10px;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }
    .add-expense-table button {
      background-color: #f39c12;
      color: white;
      border: none;
      cursor: pointer;
    }
    .add-expense-table button:hover {
      background-color: #e67e22;
    }
>>>>>>> 26a43a58d06a9c7738dbe300d004f6512f12fa14
    </style>
</head>
<body class="light">
    <!-- <div class="navbar">
        <h1>
<<<<<<< HEAD
            <img src="image/bb1.jpg" alt="Logo">
=======
            <img src="/frontend/public/images/bb1.jpg" alt="Logo">
>>>>>>> 26a43a58d06a9c7738dbe300d004f6512f12fa14
            Smart Budget Tracker
        </h1>
        <button class="theme-toggle" onclick="toggleTheme()">Dark Mode</button>
    </div> -->

    <!-- New Navigation Bar -->
    <div class="new-navbar">
        <img src="image/bb1.jpg" alt="logo">
        <span class="text">Budget Buddy</span>
        <ul class="new-nav-links">
            <li><a href="#">EXPENDITURE</a></li>
            <li><a href="#">TRANSACTION</a></li>
            <li><a href="#">AI BUDGET SMARTER</a></li>
            <li><a href="#">ABOUT US</a></li>
        </ul>
        <button class="theme-toggle" onclick="toggleTheme()">Dark Mode</button>
    </div>
    <section>
        <div>
          <h1 class="heading">AI-Powered Smart Budget & Expense Tracker for Students</h1>
          <h3 class="subtag">"From Pocket Money to Smart Money!"</h3>
        </div>
        <img class="large-image" src="image/bb6.png" alt="rightimage">
      </section>
    
    

    <div class="container">
        <% if (typeof body === 'undefined') { %>
            <p>Welcome to the Smart Budget Tracker! This is a sample page with functional buttons.</p>
            
            <div class="expense-list">
                <h2>Sample Expenses</h2>
                <div id="expenseList">
                    <!-- Populated dynamically -->
                </div>
            </div>

            <div class="chart-section">
                <h2>Sample Spending Breakdown</h2>
                <canvas id="expenseChart" width="400" height="400"></canvas>
            </div>
            <div class="add-expense-container">
              
            <script>
                // Sample data to initialize
                const sampleExpenses = [
                    { _id: 'sample1', category: 'Food', amount: 500, paymentMethod: 'Cash', date: new Date() },
                    { _id: 'sample2', category: 'Transport', amount: 200, paymentMethod: 'UPI', date: new Date() }
                ];

                async function initializeSampleExpenses() {
                    for (const exp of sampleExpenses) {
                        await fetch('/api/expenses/add', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({
                                amount: exp.amount,
                                category: exp.category,
                                paymentMethod: exp.paymentMethod
                            })
                        });
                    }
                    fetchSampleExpenses();
                }

                async function fetchSampleExpenses() {
                    const response = await fetch('/api/expenses');
                    const expenses = await response.json();
                    displayExpenses(expenses);
                    renderChart(expenses);
                }

                function displayExpenses(expenses) {
                    const expenseList = document.getElementById('expenseList');
                    expenseList.innerHTML = expenses.map(exp => `
                        <div class="expense-item" data-id="${exp._id}">
                            <span>
                                <img src="${exp.category === 'Food' ? 'https://cdn-icons-png.flaticon.com/512/3571/3571506.png' : 'https://cdn-icons-png.flaticon.com/512/3094/3094856.png'}" alt="${exp.category}">
                                ${exp.category}: â‚¹${exp.amount} (${exp.paymentMethod}) - ${new Date(exp.date).toDateString()}
                            </span>
                            <div>
                                <button onclick="editExpense('${exp._id}')">Edit</button>
                                <button onclick="deleteExpense('${exp._id}')">Delete</button>
                            </div>
                        </div>
                    `).join('') || '<p>No expenses yet.</p>';
                }

                async function editExpense(id) {
                    const amount = prompt('Enter new amount', '');
                    const category = prompt('Enter new category', '');
                    const paymentMethod = prompt('Enter new payment method', '');
                    if (amount && category && paymentMethod) {
                        const response = await fetch(`/api/expenses/${id}`, {
                            method: 'PUT',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ amount, category, paymentMethod })
                        });
                        if (response.ok) fetchSampleExpenses();
                    }
                }

                async function deleteExpense(id) {
                    const response = await fetch(`/api/expenses/${id}`, {
                        method: 'DELETE'
                    });
                    if (response.ok) fetchSampleExpenses();
                }

                function toggleTheme() {
                    const body = document.body;
                    const button = document.querySelector('.theme-toggle');
                    if (body.classList.contains('light')) {
                        body.classList.remove('light');
                        body.classList.add('dark');
                        button.textContent = 'Light Mode';
                    } else {
                        body.classList.remove('dark');
                        body.classList.add('light');
                        button.textContent = 'Dark Mode';
                    }
                }

                // Initialize
                window.onload = () => {
                    initializeSampleExpenses();
                };
            </script>
        <% } else { %>
            <%- include(body + '.ejs') %>
        <% } %>
    </div>
    <script src="/script.js"></script>
</body>
</html>